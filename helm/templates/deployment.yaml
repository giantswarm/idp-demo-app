apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "idp-demo-app.fullname" . }}
  labels:
    {{- include "idp-demo-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "idp-demo-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "idp-demo-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "idp-demo-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: LISTEN_PORT
              value: "{{ .Values.podListenPort | default "8080" }}"
            - name: GIN_MODE
              value: "{{ .Values.ginMode | default "debug" }}"
            - name: DB_USERNAME
              value: "{{ .Values.database.username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.database.password }}"
            - name: DB_NAME
              value: "{{ .Values.database.name }}"
            - name: DB_ADDRESS
              value: "{{ .Values.database.address }}"
            - name: DB_PORT
              value: "{{ .Values.database.port | default "3306" }}"
            - name: REDIS_ADDRESS
              value: "{{ .Values.redis.address }}"
            - name: REDIS_PASSWORD
              value: "{{ .Values.redis.password }}"
            - name: REDIS_PORT
              value: "{{ .Values.redis.port | default "6379" }}"
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: "RuntimeDefault"
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65535
            runAsGroup: 65535
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.podListenPort | default 8080 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - {{ include "idp-demo-app.name" . }}
                    - key: "app.kubernetes.io/instance"
                      operator: In
                      values:
                        - {{ .Release.Name }}
